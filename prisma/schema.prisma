generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                 Int        @default(autoincrement()) @id
  compoundId         String     @unique
  userId             Int
  providerType       String
  providerId         String
  providerAccountId  String
  refreshToken       String?
  accessToken        String?
  accessTokenExpires DateTime?
  createdAt          DateTime   @default(now())
  updatedAt          DateTime   @default(now())

  @@index([providerAccountId], name: "providerAccountId")
  @@index([providerId], name: "providerId")
  @@index([userId], name: "userId")
}

model Session {
  id           Int          @default(autoincrement()) @id
  userId       Int
  expires      DateTime
  sessionToken String       @unique
  accessToken  String       @unique
  createdAt    DateTime     @default(now())
  updatedAt    DateTime     @default(now())
}

model VerificationRequest {
  id         Int        @default(autoincrement()) @id
  identifier String
  token      String     @unique
  expires    DateTime
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @default(now())
}

model User {
  id            Int         @default(autoincrement()) @id
  firstName     String?
  lastName      String?
  email         String?     @unique
  emailVerified DateTime?
  image         String?
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @default(now())
  roles         Role[]
}

enum Role {
    UBIADMIN
    SUPERADMIN
    ADMIN
    MANAGER
    READER
}

model Box {
  id            Int             @default(autoincrement()) @id
  name          String
  devEUI        String          @unique
  serialNumber  String          @unique
  weighingArea  WeighingArea?   @relation("weighingBox")
  quay          Quay?           @relation("quayBox")
  beginRT       RotationTime?   @relation("beginPlaceBox")
  endingRT      RotationTime?   @relation("endingPlaceBox")
}

model Gate {
  id            Int             @default(autoincrement()) @id
  name          String
  place         String          @default("GATE")
  store         Warehouse       @relation(fields: [storeId], references: [id])
  storeId       Int
}

model Warehouse {
  id            Int             @default(autoincrement()) @id
  name          String
  gates         Gate[]
}

model WeighingArea {
  id            Int             @default(autoincrement()) @id
  name          String
  boxId         Int
  box           Box             @relation("weighingBox", fields: [boxId], references: [id])
}

model Trailer {
 id             Int             @default(autoincrement()) @id
 licensePlate   String          @unique
 transporter    String
}

model TimeSlot {
 id             Int             @default(autoincrement()) @id
 beginTime      DateTime
 endTIme        DateTime
}

model Quay {
  id            Int             @default(autoincrement()) @id
  name          String
  boxId         Int
  box           Box             @relation("quayBox", fields: [boxId], references: [id])
}

model RotationTime {
  id            Int             @default(autoincrement()) @id
  beginPlaceId  Int
  beginPlace    Box             @relation("beginPlaceBox", fields: [beginPlaceId], references: [id])
  endingPlaceId Int
  endingPlace   Box             @relation("endingPlaceBox", fields: [endingPlaceId], references: [id])
}

model Padlock {
  id            Int             @default(autoincrement()) @id
  name          String
  reference     String
}


